{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/detail/detail.component.css","webpack:///./src/app/detail/detail.component.html","webpack:///./src/app/detail/detail.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/pet/pet.component.css","webpack:///./src/app/pet/pet.component.html","webpack:///./src/app/pet/pet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailComponent } from './detail/detail.component';\n\nconst routes: Routes = [\n\t{path: 'new', component: NewComponent},\n\t{path: 'edit/:id', component: EditComponent},\n\t{path: 'pets/:id', component: DetailComponent},\n\t{path: '',pathMatch: 'full', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n  <nav>\\n    <div class=\\\"nav-wrapper\\\">\\n      <a href=\\\"#\\\" class=\\\"brand-logo\\\">Pet Shelter</a>\\n    </div>\\n  </nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PetComponent } from './pet/pet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NewComponent,\n    DetailComponent,\n    EditComponent,\n    PetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, \n    HttpClientModule, \n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3>Details for {{curPet.name}}</h3>\\n\\n<p>Type: {{curPet.type}}</p>\\n\\n<p>Type: {{curPet.description}}</p>\\n\\n<p [(ngModel)] = \\\"likes\\\">Like: {{likes}}</p>\\n\\n<p>Skills</p>\\n<p *ngFor = \\\"let skill of skills\\\">\\n\\t{{skill.skill}}\\n</p>\\n\\n<button (click) = \\\"likePet(curPet._id, curPet)\\\" [disabled] = \\\"liked\\\">Like this pet</button>\\n\\n<button (click) = \\\"adoptPet(curPet._id)\\\">Adopt this pet</button>\\n\\n<button [routerLink] = \\\"['/']\\\" >Home</button>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\t curPet:any\n\t skills:any [];\n\t @Input() p_id;\n\t likes: any;\n\t liked: boolean = false;\n  constructor(private _http: HttpService, private _route: ActivatedRoute, private _router: Router) {\n  \tthis.curPet = {};\n  \tthis.skills = [];\n\n   }\n\n  ngOnInit() {\n  \t// this.getPet(this.p_id)\n  \tthis._route.params.subscribe((params: Params) => {\t\t\n  \t\tthis.getPet(params['id']);\n  \t})\n  }\n\n  getPet(id){\n  \tlet obvs = this._http.getPet(id);\n  \tobvs.subscribe(data => {\n  \t\tthis.curPet = data;\n  \t\tthis.skills = this.curPet.skills;\n  \t\tthis.likes = data[\"likes\"];\n  \t\tconsole.log(data);\n  \t});\n  }\n\n  adoptPet(id){\n  \tlet obvs = this._http.removePet(id);\n  \tobvs.subscribe(data => console.log(data))\n\n  \tthis._router.navigate(['/']);\n  }\n\n  likePet(id, pet){\n  \tthis.liked = true;\n  \tthis.likes ++;\n  \tlet obvs = this._http.addLike(id, pet);\n  \tobvs.subscribe(data => {\n  \t\tconsole.log(data)\n  \t\tthis.getPet(id);\n  \t});\n  \t\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<form  #editForm=\\\"ngForm\\\" (submit) = \\\"updatePet(curPet._id, curPet)\\\">\\n\\t<h4>Edit pet:</h4>\\n\\t<div class=\\\"card-panel red white-text\\\" *ngIf = \\\"errors\\\">{{errors}}</div>\\n\\t<div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"name.errors.required\\\">\\n\\t    Name is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"name.errors.minlength\\\">\\n\\t    Name must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\t<div *ngIf=\\\"type.invalid && (type.dirty || type.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"type.errors.required\\\">\\n\\t    Type is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"type.errors.minlength\\\">\\n\\t    Type must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\t<div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"description.errors.required\\\">\\n\\t    Description is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"description.errors.minlength\\\">\\n\\t    Description must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\n\\n\\t<input type=\\\"text\\\" name=\\\"curPet.name\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"curPet.name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Name\\\">\\n\\t<input type=\\\"text\\\" name=\\\"curPet.type\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"curPet.type\\\" #type=\\\"ngModel\\\" placeholder=\\\"Type\\\">\\n\\t<input type=\\\"text\\\" name=\\\"curPet.description\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"curPet.description\\\" #description=\\\"ngModel\\\" placeholder=\\\"Description\\\">\\n\\t<p>Skills:</p>\\n\\t<input type=\\\"text\\\" name=\\\"skill1\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"skill1\\\" #skills1=\\\"ngModel\\\">\\n\\t<input type=\\\"text\\\" name=\\\"skill2\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"skill2\\\" #skills2=\\\"ngModel\\\">\\n\\t<input type=\\\"text\\\" name=\\\"skill3\\\" minlength=\\\"3\\\" [(ngModel)] = \\\"skill3\\\" #skills3=\\\"ngModel\\\">\\n\\t<button class=\\\"waves-effect waves-light btn-large\\\" type=\\\"submit\\\" [disabled] = \\\"editForm.form.invalid\\\"><i class=\\\"material-icons left\\\">pets</i>Update Pet</button>\\n\\t<button class=\\\"waves-effect waves-light btn-large red\\\" [routerLink] = \\\"['/']\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\ncurPet: any;\nerrors: any [];\nskills: any[];\nskill1: any;\nskill2: any;\nskill3: any;\n\n  constructor(private _http: HttpService, private _route: ActivatedRoute, private _router: Router) {\n  \tthis.curPet = {name: \"\", type: \"\", description: \"\", likes: 0}\n   }\n\n  ngOnInit() {\n  \tthis._route.params.subscribe((params: Params) => {\t\t\n  \t\tthis.getPet(params['id']);\n\n  \t})\n  }\n\n  getPet(id){\n  \tlet obvs = this._http.getPet(id);\n  \tobvs.subscribe(data => {\n  \t\tconsole.log(data)\n  \t\tthis.curPet = data\n  \t\tconsole.log(this.curPet);\n  \t\tthis.skills = this.curPet.skills;\n  \t\tthis.skill1 = this.skills[0].skill;\n  \t\tthis.skill2 = this.skills[1].skill;\n  \t\tthis.skill3 = this.skills[2].skill;\n  \t});\n  }\n\n  updatePet(pet, data){\n  \tvar newpet = {\n     name: this.curPet.name,\n     type: this.curPet.type, \n     description: this.curPet.description,\n     skillsArr: [this.skill1, this.skill2, this.skill3]\n   }\n   console.log(\"newPet\", newpet)\n  \tlet obvs = this._http.updatePet(pet, newpet)\n  \t\tobvs.subscribe(data => {\n  \t\t\tif(data['message']){\n  \t\t\t\t this.errors = data[\"errors\"].name.message;\n  \t\t\t} else {\n  \t\t\t\tthis._router.navigate(['/']);\n  \t\t\t}\n   });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"row\\\">\\n<button [routerLink] = \\\"['new']\\\" class=\\\"waves-effect waves-light btn-large\\\" ><i class=\\\"material-icons left\\\">plus_one</i>Add a pet</button>\\n</div>\\n<div class = \\\"row\\\">\\n<div *ngFor = \\\"let pet of allPets\\\" class=\\\"col s12 m4\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-content \\\">\\n          <span class=\\\"card-title\\\">Name: {{pet.name}}</span>\\n          <p>Type: {{pet.type}}</p>\\n          <p>{{pet.description}}</p>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <a [routerLink] = \\\"['pets', pet._id]\\\">Details</a>\\n          <a [routerLink] = \\\"['edit', pet._id]\\\">Edit</a>\\n        </div>\\n\\t</div>\\n</div>\\n<div class = \\\"row\\\">\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tallPets:any =[];\n  constructor(private _http: HttpService) { }\n\n  ngOnInit() {\n  \tthis.getPets();\n  }\n\n  getPets(){\n  \tlet obvs = this._http.getPets();\n  \tobvs.subscribe(data => this.allPets = data);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  // addAuthor(data){\n  // \treturn this._http.post('/api/authors', data);\n  // }\n\n  addPet(data){\n  \treturn this._http.post('/api/pets', data)\n  }\n\n  // getAuthor(author){\n  //   return this._http.get('/api/authors/' + author);\n  // }\n  getPet(id){\n    return this._http.get('/api/pets/' + id);\n  }\n\n  // getAuthors(){\n  // \tconsole.log(\"getting authors\")\n  // \treturn this._http.get('/api/authors');\n  // }\n\n  getPets(){\n    console.log(\"getting pets\");\n    return this._http.get('/api/pets');\n  }\n\n   updatePet(pet, data){\n    console.log(\"data:\", pet, data);\n    return this._http.patch('/api/pets/'+pet, data)\n  }\n\n  removePet(id){\n    return this._http.delete('/api/pets/'+id);\n  }\n\n  addLike(id, pet){\n    return this._http.patch('/api/likes/'+id, pet);\n  }\n  // getQuotes(author){\n  // \tconsole.log(\"getting quotes for \", author)\n  // \treturn this._http.get('/api/authors/' + author);\n  // }\n\n  // addQuote(author, quote){\n  // \tconsole.log(\"adding quote for author\", quote, author);\n  // \treturn this._http.post('/api/quotes/'+author, quote)\n  // }\n\n  // addVote(author, quote){\n  //   return this._http.patch('/api/quotes/'+ author +'/' + quote, quote)\n  // }\n}\n","module.exports = \"\"","module.exports = \"\\n<form #newForm = \\\"ngForm\\\" (submit) = \\\"addPet(newPet)\\\">\\n\\t<h4>Add a pet:</h4>\\n\\t<div class=\\\"card-panel red white-text\\\" *ngIf = \\\"errors\\\">{{errors}}</div>\\n\\t<div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"name.errors.required\\\">\\n\\t    Name is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"name.errors.minlength\\\">\\n\\t    Name must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\t<div *ngIf=\\\"type.invalid && (type.dirty || type.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"type.errors.required\\\">\\n\\t    Type is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"type.errors.minlength\\\">\\n\\t    Type must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\t<div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\" class=\\\"card-panel red white-text\\\">\\n\\t  <div *ngIf=\\\"description.errors.required\\\">\\n\\t    Description is required.\\n\\t  </div>\\n\\t  <div *ngIf=\\\"description.errors.minlength\\\">\\n\\t    Description must be at least 3 characters long.\\n\\t  </div>\\n\\t</div>\\n\\n\\n\\t<input type=\\\"text\\\" name=\\\"newPet.name\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"newPet.name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Name\\\">\\n\\t<input type=\\\"text\\\" name=\\\"newPet.type\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"newPet.type\\\" #type=\\\"ngModel\\\" placeholder=\\\"Type\\\">\\n\\t<input type=\\\"text\\\" name=\\\"newPet.description\\\" minlength=\\\"3\\\" required [(ngModel)] = \\\"newPet.description\\\" #description=\\\"ngModel\\\" placeholder=\\\"Description\\\">\\n\\t<p>Skills: (Optional)</p>\\n\\t<input type=\\\"text\\\" name=\\\"skill1\\\" minlength=\\\"3\\\"  [(ngModel)] = \\\"skill1\\\" #skills1=\\\"ngModel\\\">\\n\\t<input type=\\\"text\\\" name=\\\"skill2\\\" minlength=\\\"3\\\"  [(ngModel)] = \\\"skill2\\\" #skills2=\\\"ngModel\\\">\\n\\t<input type=\\\"text\\\" name=\\\"skill3\\\" minlength=\\\"3\\\"  [(ngModel)] = \\\"skill3\\\" #skills3=\\\"ngModel\\\">\\n\\t<button class=\\\"waves-effect waves-light btn-large\\\" type=\\\"submit\\\" [disabled] = \\\"newForm.form.invalid\\\"><i class=\\\"material-icons left\\\">pets</i>Add Pet</button>\\n\\t<button class=\\\"waves-effect waves-light btn-large red\\\" [routerLink] = \\\"['/']\\\">Cancel</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n\tnewPet: any;\n\tskill1: any;\n\tskill2: any;\n\tskill3: any;\n  errors: any [];\n  constructor(private _http: HttpService, private _router: Router) {\n  \tthis.newPet = {\n  \t\tname: \"\",\n  \t\ttype: \"\",\n  \t\tdescription: \"\",\n  \t\tskills: []\n  \t}\n   }\n\n  ngOnInit() {\n  }\n\n  addPet(pet){\n  \t// console.log(\"Making pets\");\n   //  pet.skills = [this.skill1, this.skill2, this.skill3]\n   //  console.log(\"Skills\" ,pet.skills)\n   var newpet = {\n     name: this.newPet.name,\n     type: this.newPet.type, \n     description: this.newPet.description,\n     skillsArr: [this.skill1, this.skill2, this.skill3]\n   }\n  \tlet obvs = this._http.addPet(newpet);\n  \tobvs.subscribe(data => {\n      console.log(data)\n      if(data[\"message\"]){\n        this.errors = data[\"errors\"].name.message;\n        console.log(data[\"message\"])\n      } else{\n        console.log(\"routing\");\n        this._router.navigate(['/'])\n      }\n    })\n  \t\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  pet works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pet',\n  templateUrl: './pet.component.html',\n  styleUrls: ['./pet.component.css']\n})\nexport class PetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}